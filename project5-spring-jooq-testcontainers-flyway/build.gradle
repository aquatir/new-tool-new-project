buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath 'org.testcontainers:postgresql:1.17.6'
        classpath 'org.postgresql:postgresql:42.5.3'
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.0'

    id 'org.flywaydb.flyway' version '9.8.1'
    id 'nu.studer.jooq' version '8.1'
    id 'com.dorongold.task-tree' version '2.1.1'
}

project.group = 'learn.project5'
project.version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

ext {
    set('testcontainersVersion', "1.17.6")
}

configurations {
    flywayMigration
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-jooq'
    implementation 'org.flywaydb:flyway-core'

    implementation 'ch.qos.logback:logback-classic:1.4.5'

    jooqGenerator "com.github.sabomichal:jooq-meta-postgres-flyway:1.1.0"

    runtimeOnly 'org.postgresql:postgresql'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}

tasks.named('test') { Test it ->
    it.useJUnitPlatform()
}


jooq {
    configurations {
        main {
            generationTool {
                generator {
                    database {
                        name = "com.github.sabomichal.jooq.PostgresDDLDatabase"
                        inputSchema = "public"
                        includes = "public.*"
                        excludes = "flyway_schema_history"
                        properties {
                            property {
                                key = "locations"
                                value = "src/main/resources/db/migration"
                            }
                            property {
                                key = "dockerImage"
                                value = "postgres:14"
                            }
                            property {
                                key = "placeholders"
                                value = "a=1,b=2"
                            }
                        }
                    }
                    generate {
                        // ...
                    }
                }
            }
        }
    }
}

//tasks.named('compileJava') {  it ->
//    it.dependsOn.remove("generateJooq")
//}

